import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import Header from "~/components/Header";
import { Grid, Text } from "@nextui-org/react";

import { api } from "~/utils/api";
import GrabbableObject from "~/components/GrabbableObject";
import { SignIn, useUser } from "@clerk/nextjs";
import { useState, useEffect } from "react";
import { saveNotesLocal, getNotesLocal } from "~/localstorage/noteStore";

const Home: NextPage = () => {
  const user = useUser()
  const [notes, setNotes] = useState([])

  let remoteNotes
  if (user.user) {
    remoteNotes = api.notes.getNotes.useQuery({ userId: user.user.id });
  } else {
    remoteNotes = api.notes.getDefaultNotes.useQuery();
  }

  useEffect(() => {
    let localNotes = getNotesLocal()
    let mergedNotes = [...localNotes]

    const existingIds = new Set(localNotes.map(note => note.id))

    if (remoteNotes.data) {
      remoteNotes.data?.forEach(remoteNote => {
        if (!existingIds.has(remoteNote.id)) {
          mergedNotes.push(remoteNote);
          existingIds.add(remoteNote.id)
        }
      })
    }

    setNotes(mergedNotes)
    saveNotesLocal(mergedNotes)
  }, [remoteNotes.data])

  console.log(notes)

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />
      <main className="flex h-full min-h-screen flex-col bg overflow-auto">
        {notes.map(note => {
          return (
            <GrabbableObject title={note.title} body={note.content} startXPos={note.positionX} startYPos={note.positionY} key={note.id} id={note.id} />
          )
        })}

      </main>
    </>
  );
};

export default Home;
